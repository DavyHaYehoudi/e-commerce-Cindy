import Client from "../../models/client.model.js";
import {
  generateVerificationToken,
  sendVerificationEmail,
} from "./utils/emailRegister.js";

const register = async (req, res) => {
  const { firstName, lastName, email, password } = req.body;

  try {
    // V√©rification si l'utilisateur existe d√©j√†
    const existingClient = await Client.findOne({ email });

    if (existingClient) {
      return res
        .status(400)
        .json({ messageError: "Adresse email d√©j√† utilis√©e ü§®" });
    }

    // Cr√©ation d'un nouvel utilisateur
    const newClient = new Client({
      firstName,
      lastName,
      email,
      password, // Le mot de passe sera hash√© automatiquement gr√¢ce au middleware dans le mod√®le
    });

    // Enregistrement de l'utilisateur dans la base de donn√©es
    await newClient.save();
    // G√©n√©ration et envoi du token de v√©rification par e-mail
    const verificationToken = generateVerificationToken(newClient);
    await sendVerificationEmail(newClient, verificationToken);
    
    res.status(201).json({ message: "Compte utilisateur cr√©√© avec succ√®s." });
  } catch (error) {
    console.error("Erreur lors de la cr√©ation du compte utilisateur :", error);
    res.status(500).json({
      message: "Erreur serveur lors de la cr√©ation du compte utilisateur.",
    });
  }
};

export { register };
