openapi: 3.0.3
info:
  title: Site e-commerce
  description: >
    Some useful links:

    - [Lien Github du code
    source](https://github.com/DavyHaYehoudi/e-commerce-Cindy)

    - [The source API definition for the Pet
    Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
  contact:
    email: davy.programa@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://petstore3.swagger.io/api/v3
tags:
  - name: client
    description: Customers
  - name: order
    description: Orders customers
  - name: orderProducts
    description: List of products for each order
  - name: product
    description: Product description
  - name: credit
    description: Credits customers
  - name: material
    description: Material products
paths:
  /clients:
    get:
      tags:
        - client
      description: Getting paramater number of clients
      operationId: getAllClients
      parameters:
        - name: itemsPerPage
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            default: "5"
        - name: steps
          in: query
          description: Number of steps
          required: false
          schema:
            type: string
            default: ""
            example: 0,3,5
        - name: trackingNumber
          in: query
          description: trackingNumber in order 
          required: false
          schema:
            type: string
            default: ""
            example: true
        - name: note
          in: query
          description: note in client 
          required: false
          schema:
            type: string
            default: ""
            example: true
        - name: credit
          in: query
          description: credit in orderProducts 
          required: false
          schema:
            type: string
            default: ""
            example: true
        - name: exchange
          in: query
          description: exchange in orderProducts 
          required: false
          schema:
            type: string
            default: ""
            example: true
        - name: refund
          in: query
          description: refund in orderProducts 
          required: false
          schema:
            type: string
            default: ""
            example: true
        - name: preciseDate
          in: query
          description: precise creation date of order 
          required: false
          schema:
            type: string
            default: ""
            example: 2024-03-10 in this format
        - name: rangeDateStart
          in: query
          description: start of range creation date of order 
          required: false
          schema:
            type: string
            default: ""
            example: 2024-03-10 in this format
        - name: rangeDateEnd
          in: query
          description: end of range creation date of order 
          required: false
          schema:
            type: string
            default: ""
            example: 2024-05-20 in this format
      responses:
        '200':
          description: successful getting all clients
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clients'
        '401':
          description: Unauthorized - Admin is not authenticated
      security:
        - api_key: []
  /clients/register:
    post:
      tags:
        - client
      summary: Create a new client
      description: This can only be done by the logged in client.
      operationId: createClient
      requestBody:
        description: Created client object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Clients'
      responses:
        '201':
          description: successful account creation
        '400':
          description: Invalid username/password supplied
        '422':
          description: Failed validation. The email is already taken.
  /clients/login:
    post:
      tags:
        - client
      summary: Logs client into the system
      description: ''
      operationId: loginClient
      requestBody:
        description: Logged client object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
      responses:
        '200':
          description: successful authentication
        '400':
          description: Invalid username/password supplied
        '401':
          description: Client not authenticated.
  /clients/logout:
    get:
      tags:
        - client
      summary: Logs out current logged in client session
      description: ''
      operationId: logoutClient
      parameters: []
      responses:
        '200':
          description: successful logged
      security:
        - api_key: []
  /clients/{clientId}:
    get:
      tags:
        - client
      summary: Get customer infos by id
      description: ''
      operationId: getCustomerInfos
      parameters:
        - name: clientId
          in: path
          description: The id that needs to be fetched.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful getting client
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientDetails'
        '400':
          description: Invalid clientId supplied
        '401':
          description: Unauthorized - Client is not authenticated
        '403':
          description: >-
            Forbidden - The client is authenticated, but does not have
            permission to access the requested resource.
      security:
        - api_key: []
    patch:
      tags:
        - client
      summary: Edit partially client
      description: This can only be done by the logged in client.
      operationId: updateClient
      parameters:
        - name: clientId
          in: path
          description: id that needs to be edited
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditClient'
      responses:
        '200':
          description: Successful updated client
        '400':
          description: Invalid clientId supplied
        '401':
          description: Unauthorized - Client is not authenticated
        '403':
          description: >-
            Forbidden - The client is authenticated, but does not have
            permission.
      security:
        - api_key: []
    delete:
      tags:
        - client
      summary: Delete client
      description: This can only be done by the logged in client.
      operationId: deleteClient
      parameters:
        - name: clientId
          in: path
          description: The id that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful deleted client
        '400':
          description: Invalid clientId supplied
        '401':
          description: Unauthorized - Client is not authenticated
        '403':
          description: >-
            Forbidden - The client is authenticated, but does not have
            permission.
      security:
        - api_key: []
  /clients/{clientId}/addNote:
    patch:
      tags:
        - client
      summary: Add admin notes
      description: This can only be done by admin.
      operationId: add notes about the order or the client
      parameters:
        - name: clientId
          in: path
          description: id that needs to be added
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddingNotesAdmin'
      responses:
        '200':
          description: Successful added notes
        '400':
          description: Invalid clientId supplied
        '401':
          description: Unauthorized - Admin is not authenticated
      security:
        - api_key: []
  /clients/{clientId}/removeNote/{noteId}:
    patch:
      tags:
        - client
      summary: Delete admin notes
      description: This can only be done by admin.
      operationId: delete notes about the order or the client
      parameters:
        - name: clientId
          in: path
          description: ID of the client
          required: true
          schema:
            type: string
        - name: noteId
          in: path
          description: ID of the note
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful added notes
        '400':
          description: Invalid clientId supplied
        '401':
          description: Unauthorized - Admin is not authenticated
      security:
        - api_key: []
  /orders{orderIds}:
    get:
      tags:
        - order
      parameters:
        - name: orderIds
          in: path
          description: JSON array representing ids of orders
          required: true
          style: simple
          explode: true
          schema:
            type: array
            items:
              type: string

      summary: Returns orders depend on the number parameter
      description: Returns the list of orders
      responses:
        '200':
          description: successful getting all orders
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orders'
        '401':
          description: Unauthorized - Admin is not authenticated
      security:
        - api_key: []
    post:
      tags:
        - order
      parameters: 
      - name: orderIds
        in: path
        required: true
        schema:
          type: object
          properties:
              orderIds:
                type: array
                items:
                  type: string
            
      summary: Place an order for a purchase
      description: Place a new order in the list
      operationId: placeOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FirstOrder'
      responses:
        '201':
          description: successful posting order
        '400':
          description: Bad Request - Invalid parameters
        '401':
          description: Unauthorized - Client is not authenticated
      security:
        - api_key: []
  /orders/{orderId}:
    get:
      tags:
        - order
      summary: Find purchase order by ID
      description: ''
      operationId: getOrderById
      parameters:
        - name: orderId
          in: path
          description: ID of order that needs to be fetched
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid ID supplied
        '401':
          description: Unauthorized - Admin is not authenticated
      security:
        - api_key: []
    patch:
      tags:
        - order
      summary: Edit partially an order for a purchase
      description: Edit an order
      operationId: editOrder
      parameters:
        - name: orderId
          in: path
          description: ID of order that needs to be fetched
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: Successful updated order
        '400':
          description: Invalid orderId supplied
        '401':
          description: Unauthorized - Admin is not authenticated
      security:
        - api_key: []
  /orders/{orderId}/trackingnumber_client:
    post:
      tags:
        - order
      summary: Create a tracking Number client
      description: This can only be done by client.
      operationId: The client creates his tracking number
      parameters:
        - name: orderId
          in: path
          description: ID of the order
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackingNumberClient'
      responses:
        '201':
          description: Successful creation tracking number
        '400':
          description: Invalid orderId supplied
        '404':
          description: Order not found
        '401':
          description: Unauthorized - Admin is not authenticated
      security:
        - api_key: []
  /orders/{orderId}/trackingnumber_client/{trackingNumberId} :
    delete:
      tags:
        - order
      summary: Delete a tracking Number client
      description: This can only be done by client.
      operationId: The client deletes his tracking number
      parameters:
        - name: orderId
          in: path
          description: ID of the order
          required: true
          schema:
            type: string
        - name: trackingNumberId
          in: path
          description: ID of the tracking number
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful creation tracking number
        '400':
          description: Invalid orderId or trackingNumberId supplied
        '404':
          description: Order or trackingNumberId not found
        '401':
          description: Unauthorized - Admin is not authenticated
      security:
        - api_key: []
  /orderProducts{orderProductsIds}:
    get:
      tags:
        - orderProducts
      parameters:
        - name: orderProductsIds
          in: path
          description: JSON array representing ids of orderProducts
          required: true
          style: simple
          explode: true
          schema:
            type: array
            items:
              type: string

      summary: Returns all products that are in order
      description: Returns a list of products
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsByOrder'
        '401':
          description: Unauthorized - Admin is not authenticated
      security:
        - api_key: []
  /orderProducts/{orderProductsId}:
    get:
      tags:
        - orderProducts
      summary: Find purchase orderProducts by ID
      description: ''
      operationId: getProductsById
      parameters:
        - name: orderProductsId
          in: path
          description: ID of products that needs to be fetched
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful get orderProducts by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsByOrder'
        '400':
          description: Invalid ID supplied
        '401':
          description: Unauthorized - Admin is not authenticated
      security:
        - api_key: []
  /orderProducts/{orderProductsId}/note:
    patch:
      tags:
        - orderProducts
      summary: Edit note orderProducts by ID
      description: ''
      operationId: editNoteProductsByOrder
      parameters:
        - name: orderProductsId
          in: path
          description: ID of orderProducts that needs to be edited
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful edit orderProducts 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsByOrderNote'
        '400':
          description: Invalid ID supplied
        '401':
          description: Unauthorized - Admin is not authenticated
      security:
        - api_key: []
  /products:
    get:
      tags:
        - product
      summary: Returns all products
      description: Returns the list of all products
      responses:
        '200':
          description: successful getting all products
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Products'
        '401':
          description: Unauthorized - Admin is not authenticated
      security:
        - api_key: []
    post:
      tags:
        - product
      summary: Place an product for a purchase
      description: Place a new product in the list
      operationId: placeProductsbyorderId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FirstProduct'
      responses:
        '201':
          description: successful posting product
        '400':
          description: Bad Request - Invalid parameters
        '401':
          description: Unauthorized - Admin is not authenticated
      security:
        - api_key: []
  /products/{productsId}:
    get:
      tags:
        - product
      summary: Find purchase order by ID
      description: >-
        For valid response try integer IDs with value <= 5 or > 10. Other values
        will generate exceptions.
      operationId: getProductById
      parameters:
        - name: productsId
          in: path
          description: ID of products that needs to be fetched
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Invalid ID supplied
        '401':
          description: Unauthorized - Admin is not authenticated
      security:
        - api_key: []
    patch:
      tags:
        - product
      summary: Edit partially a product
      description: Edit a new product
      operationId: editProduct
      parameters:
        - name: productsId
          in: path
          description: ID of product that needs to be fetched
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Successful updated product
        '400':
          description: Invalid product ID supplied
        '401':
          description: Unauthorized - Admin is not authenticated
      security:
        - api_key: []
    delete:
      tags:
        - product
      summary: Delete product by ID
      description: ''
      operationId: deleteProduct
      parameters:
        - name: productsId
          in: path
          description: ID of the order that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful deleted product
        '400':
          description: Invalid productsId supplied
        '401':
          description: Unauthorized - Admin is not authenticated
      security:
        - api_key: []
  /credits:
    get:
      tags:
        - credit
      parameters:
      - name: orderProductsIds
        in: query
        description: JSON array representing ids of orderProducts
        required: true
        explode: true
        schema:
            type: array
            items:
              type: string
      summary: Returns all credits
      description: Returns the list of credits
      responses:
        '200':
          description: successful getting all credits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credits'
        '401':
          description: Unauthorized - Admin is not authenticated
      security:
        - api_key: []
  /credits/{orderProductsId}:
    patch:
      tags:
        - credit
      summary: Use of customer credit
      description: This can only be done by the logged in client.
      operationId: updateCredit to be archived
      parameters:
        - name: orderProductsId
          in: path
          description: id that needs to be archived
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful updated credit
        '400':
          description: Invalid creditId supplied
        '401':
          description: Unauthorized - Client is not authenticated
        '403':
          description: >-
            Forbidden - The client is authenticated, but does not have
            permission.
      security:
        - api_key: []
  /material:
    get:
      tags:
        - material
      summary: Returns all materials
      description: Returns the list of all materials
      responses:
        '200':
          description: successful getting all materials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
        '401':
          description: Unauthorized - Admin is not authenticated
      security:
        - api_key: []
    post:
      tags:
        - material
      summary: Place a material for a product
      description: Place a new material in the list
      operationId: placeMaterialById
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialCreate'
      responses:
        '201':
          description: successful posting material
        '400':
          description: Bad Request - Invalid parameters
        '401':
          description: Unauthorized - Admin is not authenticated
      security:
        - api_key: []
  /material/{materialId}:
    put:
      tags:
        - material
      summary: Update material by ID
      description: ''
      operationId: updateMaterial
      parameters:
        - name: materialId
          in: path
          description: ID of the material that needs to be updated
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialCreate'
      responses:
        '200':
          description: Successful deleted material
        '400':
          description: Invalid materialId supplied
        '401':
          description: Unauthorized - Admin is not authenticated
      security:
        - api_key: []
    delete:
      tags:
        - material
      summary: Delete material by ID
      description: ''
      operationId: deleteMaterial
      parameters:
        - name: materialId
          in: path
          description: ID of the material that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful deleted material
        '400':
          description: Invalid materialId supplied
        '401':
          description: Unauthorized - Admin is not authenticated
      security:
        - api_key: []
  /promocodes:
    get:
      tags:
        - promocode
      summary: Returns all promocodes
      description: Returns the list of all promocodes
      responses:
        '200':
          description: successful getting all promocodes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promocode'
        '401':
          description: Unauthorized - Admin is not authenticated
      security:
        - api_key: []
    post:
      tags:
        - promocode
      summary: Place a promocode 
      description: Place a new promocode in the list
      operationId: placePromocodeById
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromocodeCreate'
      responses:
        '201':
          description: successful posting promocode
        '400':
          description: Bad Request - Invalid parameters
        '401':
          description: Unauthorized - Admin is not authenticated
      security:
        - api_key: []
  /promocodes/{promocodeId}:
    delete:
      tags:
        - promocode
      summary: Delete promocode by ID
      description: ''
      operationId: deletePromocode
      parameters:
        - name: promocodeId
          in: path
          description: ID of the promocode that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful deleted promocode
        '400':
          description: Invalid promocodeId supplied
        '401':
          description: Unauthorized - Admin is not authenticated
      security:
        - api_key: []
  /giftcards:
    get:
      tags:
        - giftcard
      summary: Returns all giftcards
      description: Returns the list of all giftCards
      responses:
        '200':
          description: successful getting all giftCards
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GiftCard'
        '401':
          description: Unauthorized - Admin is not authenticated
      security:
        - api_key: []
    post:
      tags:
        - giftcard
      summary: Place a giftcard 
      description: Place a new giftCard 
      operationId: placeGiftCardsById
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GiftCardCreate'
      responses:
        '201':
          description: successful posting giftCard
        '400':
          description: Bad Request - Invalid parameters
        '401':
          description: Unauthorized - Admin is not authenticated
      security:
        - api_key: []
  /giftcards/{giftcardId}:
    delete:
      tags:
        - giftcard
      summary: Delete giftcard by ID
      description: ''
      operationId: deleteGiftCard
      parameters:
        - name: giftcardId
          in: path
          description: ID of the giftCard that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful deleted promocode
        '400':
          description: Invalid giftcardId supplied
        '401':
          description: Unauthorized - Admin is not authenticated
      security:
        - api_key: []
    patch:
      tags:
        - giftcard
      summary: Archive giftcard by ID
      description: ''
      operationId: archiveGiftcardById
      parameters:
        - name: giftcardId
          in: path
          description: ID of the giftCard that needs to be archived
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful archiving giftcard
        '400':
          description: Invalid giftcardId supplied
        '401':
          description: Unauthorized - Admin is not authenticated
      security:
        - api_key: []
components:
  schemas:
    Client:
      type: object
      properties:
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: '12345'
      xml:
        name: client
    Clients:
      type: array
      items:
        $ref: '#/components/schemas/ClientDetails'
      xml:
        name: clients
    ClientDetails:
      type: object
      properties:
        id:
          type: string
          example: 5fc4d22b45a0fb3fd4a75f65
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        email:
          type: string
          example: john@example.com
        phone:
          type: string
          example: 06 90 12 34 56
        shippingAddress:
          type: string
          example: 12 Rue de la République, 75001 Paris
        totalOrders:
          type: integer
          format: int16
          example: 3
        wishlist:
          type: array
          items:
            type: object
            properties:
              productsId:
                type: string
                example: 6vc4d22b45a0fb3fd4a75f33
              material:
                type: integer
                format: int8
                example: 1
        cart:
          type: array
          items:
            type: object
            properties:
              productsId:
                type: string
                example: 1jc4d22b45a0fb3fd4a75f50
              material:
                type: integer
                format: int8
                example: 3
        Orders:
          type: array
          items:
            type: string
          example:
            - 2884d22b45a0fb3fd4a75p2
            - 7774d22b45a0fb3fd4a7bn0
            - 10m4d22b45a0fb3fd4a7l53
    EditClient:
      type: object
      properties:
        id:
          type: string
          example: 5fc4d22b45a0fb3fd4a75f65
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        email:
          type: string
          example: john@example.com
        phone:
          type: string
          example: 06 90 12 34 56
        shippingAddress:
          type: string
          example: 12 Rue de la République, 75001 Paris
        totalOrders:
          type: integer
          format: int16
          example: 3
        wishlist:
          type: array
          items:
            type: object
            properties:
              productsId:
                type: string
                example: 6vc4d22b45a0fb3fd4a75f33
              material:
                type: integer
                format: int8
                example: 1
        cart:
          type: array
          items:
            type: object
            properties:
              productsId:
                type: string
                example: 1jc4d22b45a0fb3fd4a75f50
              material:
                type: integer
                format: int8
                example: 3
        orders:
          type: array
          items:
            type: string
          example:
            - 2884d22b45a0fb3fd4a75p2
            - 7774d22b45a0fb3fd4a7bn0
            - 10m4d22b45a0fb3fd4a7l53
    AddingNotesAdmin:
      type: object
      properties:
        content:
          type: string
          example: Echange cordial avec le client
    TrackingNumberClient:
      type: object
      properties:
        trackingNumber:
          type: object
          properties:
            id: 
              type: string
              example: 634b8479-1e1f-42a6-835a-26f6bc8e8337
            isAdmin:
              type: boolean
              example: false
            value:
              type: string
              example: UIOP908_njUI
            date:
              type: string
              example: 2024-03-24
            orderProductsId :
              type: string
              example: 10m4d22b45a0fb3fd4a7l53
    Order:
      type: array
      items:
        anyOf:
          - type: array
            items:
             type: object
             properties:
              orderProducts:
                type: object
                properties:
                  orderProductsActions:
                    type: object
                    properties:
                      exchange:
                        type: integer
                      refund:
                        type: integer 
                      credit:
                        type: string
                  _id:
                    type: string
                  quantity:
                    type: integer
              creditEdit:
                type: object
                properties:
                  orderProductsId:
                    type: string
                  amount:
                    type: integer
                  dateExpire:
                    type: string
                    format: date
          - type: object
            properties:
              step:
                type: integer
                format: int32
                example: 2
              trackingNumberList:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    isAdmin:
                      type: boolean
                    value:
                      type: string
                    date:
                      type: string
                      format: date
                    orderProducts:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                          productsId:
                            type: string
                          articlesNumber:
                            type: integer
                            format: int32
                          material:
                            type: integer
                            format: int8
                          _id:
                            type: string
                      example:
                        - id: "a0612881-8d13-47e1-aba2-42619b34c4a9"
                          productsId: "65b3e264624d950f87b81f38"
                          articlesNumber: 1
                          _id: "65c20591b1a16a3ec8e4bd44"
                    _id:
                      type: string
                example:
                  - id: "c336090c-5e7d-439a-8bf2-322311c4906d"
                    isAdmin: true
                    value: "4eme"
                    date: "2024-02-24"
                    orderProducts:
                      - id: "a0612881-8d13-47e1-aba2-42619b34c4a9"
                        productsId: "65b3e264624d950f87b81f38"
                        articlesNumber: 1
                        material: 3
                        _id: "65c20591b1a16a3ec8e4bd44"
                    _id: "65c20591b1a16a3ec8e4bd43"
                  - id: "c336090c-5e7d-439a-8bf2-322311c4777e"
                    isAdmin: true
                    value: "6eme"
                    date: "2024-02-24"
                    orderProducts:
                      - id: "a0612881-8d13-47e1-aba2-42619b34c4a9"
                        productsId: "65b3e264624d950f87b81f37"
                        articlesNumber: 2
                        material: 0
                        _id: "65c20591b1a16a3ec8e4bd44"
                    _id: "65c20591b1a16a3ec8e4bd45"
    Orders:
      type: array
      items:
        $ref: '#/components/schemas/Order'
      xml:
        name: orders
    FirstOrder:
      type: object
      properties:
        inTotalAmount:
          type: integer
          format: int32
          example: 220
        paymentMethod:
          type: array
          items:
            type: object
            properties:
              cardType:
                type: string
                example: Visa
              last4Digits:
                type: string
                example: '**** 1234'
        orderProducts:
          type: array
          items:
            type: string
            example:
              - 2884d22b45a0fb3fd4a75p2
              - 7774d22b45a0fb3fd4a7bn0
              - 10m4d22b45a0fb3fd4a7l53
    ProductsByOrder:
      type: array
      items:
        type: object
        properties:
          _id:
            type: string
            example: 2884d22b45a0fb3fd4a75p2
          productsId:
            type: string
            example: 7774d22b45a0fb3fd4a7bn0
          quantity:
            type: integer
            format: int16
            example: 2
          material:
            type: integer
            format: int16
            example: 0
          orderProductsActions:
            type: object
            properties:
              exchange:
                type: integer
                format: int16
                example: 1
              refund:
                type: integer
                format: int16
                example: null
              credit:
                type: string
                example: 10m4d22b45a0fb3fd4a7l53
              note:
                type: string
                example: Des notes pour l'exemple
    ProductsByOrderNote:
      type: object  
      properties:
        _id:
          type: string
        content:
          type: string
    Product:
      type: object
      properties:
        id:
          type: string
          example: 2884d22b45a0fb3fd4a75p2
        reference:
          type: string
          example: QER2345OIJD
        category:
          type: string
          example: Jewelry
        releaseDate:
          type: string
          example: 2023-03-07 15:54
        name:
          type: string
          example: Boucles d'oreilles
        image:
          type: string
          example: bo.png
        description:
          type: string
          example: >-
            Magnifiques boucles d'oreilles pour des occasions uniques et qui
            vous mettront en valeur.
        materials:
          type: array
          items:
            type: integer
            format: int8
          example:
            - 0
            - 1
            - 2
        promotion:
          type: object
          properties:
            amount:
              type: string
              example: 10%
            startDate:
              type: string
              example: '2023-11-15'
            endDate:
              type: string
              example: '2023-11-30'
        pricing:
          type: object
          properties:
            currentPrice:
              type: integer
              format: int16
              example: 50
            oldPrice:
              type: integer
              format: int16
              example: 25
        stock:
          type: integer
          format: int16
          example: 7
        ratings:
          type: integer
          format: int16
          example: 4.5
        options:
          type: object
          properties:
            size:
              type: array
              items:
                type: string
              example:
                - S
                - M
                - XL
            color:
              type: array
              items:
                type: string
              example:
                - Red
                - Blue
                - Green
        tags:
          type: array
          items:
            type: string
          example:
            - Casual
            - Summer
        isNew:
          type: boolean
          example: true
    Products:
      type: array
      items:
        $ref: '#/components/schemas/Product'
    FirstProduct:
      type: object
      properties:
        reference:
          type: string
          example: QER2345OIJD
        category:
          type: string
          example: Jewelry
        releaseDate:
          type: string
          example: 2023-03-07 15:54
        name:
          type: string
          example: Boucles d'oreilles
        image:
          type: string
          example: bo.png
        description:
          type: string
          example: >-
            Magnifiques boucles d'oreilles pour des occasions uniques et qui
            vous mettront en valeur.
        materials:
          type: array
          items:
            type: integer
            format: int8
          example:
            - 0
            - 1
            - 2
        promotion:
          type: object
          properties:
            amount:
              type: string
              example: 10%
            startDate:
              type: string
              example: '2023-11-15'
            endDate:
              type: string
              example: '2023-11-30'
        pricing:
          type: object
          properties:
            currentPrice:
              type: integer
              format: int16
              example: 50
            oldPrice:
              type: integer
              format: int16
              example: 25
        stock:
          type: integer
          format: int16
          example: 7
        ratings:
          type: integer
          format: int16
          example: 4.5
        options:
          type: object
          properties:
            size:
              type: array
              items:
                type: string
              example:
                - S
                - M
                - XL
            color:
              type: array
              items:
                type: string
              example:
                - Red
                - Blue
                - Green
        tags:
          type: array
          items:
            type: string
          example:
            - Casual
            - Summer
        isNew:
          type: boolean
          example: true
    Credit:
      type: object
      properties:
        _id:
          type: string
          example: 6vbhd22b45a0fb3fd4a7599
        clientId: 
          type: string
          example: 65b50eb0624d950f874b9838
        orderProductsId:
          type: string
          example: 2884d22b45a0fb3fd4a75p2
        amount:
          type: integer
          format: int16
          example: 7
        code:
          type: string
          example: 1156JHUfJNBdfdf
        dateExpire:
          type: string
          example: 2023-04-05 09:55
        archived:
          type: boolean
          example: false
    Credits:
      type: array
      items:
        $ref: '#/components/schemas/Credit'
    Material:
      type: object
      properties:
        _id:
          type: string
          example: 2884d22b45a0fb3fd4a75p2
        name:
          type: string
          example: Or blanc
        value:
          type: string
          example: "#FFFFFF"
    MaterialCreate:
      type: object
      properties:
        name:
          type: string
          example: Or rose
        value:
          type: string
          example: "#F0F0F0"
    Promocode:
      type: object
      properties:
        _id:
          type: string
          example: 65f2d2df4db605d020200620
        code:
          type: string
          example: Bonjour-10
        percentage:
          type: integer
          format: int16
          example: 10
        dateExpire: 
          type: string
          example: 2024-12-10
    PromocodeCreate:
      type: object
      properties:
        code:
          type: string
          example: Bonjour-10
        name:
          type: string
          example: Or rose
        value:
          type: string
          example: "#F0F0F0"
    GiftCard:
      type: object
      properties:
        _id:
          type: string
          example: 65f2d2b24db605d02020061c
        customerId:
          type: string
          example: 65b50eb0624d950f874b983a
        amount:
          type: number
          format: int16
          example: 50
        dateExpire: 
          type: string
          example: 2025-12-18
        archived:
          type: boolean
          example: false
    GiftCardCreate:
      type: object
      properties:
        customerId:
          type: string
          example: 64f2d2df4db605d0202b0acd
        amount:
          type: number
          format: int16
          example: 50
        dateExpire: 
          type: string
          example: 2025-12-18
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header
